<%- include('./layouts/header.ejs') %>
    <%- include('./layouts/sideBar.ejs') %>
        <%- include('./layouts/navBar.ejs') %>

            <div class="main-panel">
                <div class="content-wrapper">


                    <div class="col-12 grid-margin stretch-card">
                        <div class="card">
                            <div class="card-body">
                                <h2 class="card-title">EDIT PRODUCT</h2>
                                <form class="forms-sample" action="" method="post" enctype="multipart/form-data">
                                    <div class="form-row">
                                        <label for="exampleInputName1">Product Name</label>
                                        <input type="text" class="form-control" id="productName" name="productName"
                                            placeholder="Product Name" value="<%= product.productName %>">
                                    </div>
                                    <br>
                                    <div class="form-row align-items-center">
                                        <div class="col-sm-6 my-1">
                                            <label for="exampleInputName1">Brand Name</label>
                                            <input type="text" class="form-control" id="productBrand"
                                                name="productBrand" placeholder="Brand Name" value="<%= product.productBrand %>" required>
                                        </div>
                                        <div class="col-sm-6 my-1">
                                            <label for="exampleInputName1">Offer Percentage</label>
                                            <input type="text" class="form-control" id="productOfferPercentage"
                                                name="productOfferPercentage" placeholder="Offer Percentage" value="<%= product.productOfferPercentage %>">
                                        </div>
                                    </div>
                                    <br>
                                    <div class="form-row align-items-center">
                                        <div class="col-sm-4 my-1">
                                            <label for="exampleInputName1">Category</label>
                                            <select class="form-control" id="productCategory" name="productCategory"
                                                required>
                                                <% category.forEach(category=> { %>
                                                    <option value="<%= category._id %>">
                                                        <%= category.categoryName %>
                                                    </option>
                                                    <% }); %>
                                            </select>
                                        </div>
                                        <div class="col-sm-4 my-1">
                                            <label for="exampleInputName1">Price</label>
                                            <input type="text" class="form-control" id="productPrice"
                                                name="productPrice" placeholder="Price"
                                                value="<%= product.productPrice %>">
                                        </div>
                                        <div class="col-sm-4 my-1">
                                            <label for="exampleInputName1">Stock</label>
                                            <div class="input-group">
                                                <input type="text" class="form-control" id="productStock"
                                                    name="productStock" placeholder="Stock"
                                                    value="<%= product.productStock %>">
                                            </div>
                                        </div>
                                    </div>
                                    <br>
                                    <div class="form-row">
                                        <label for="exampleInputName1">Description</label>
                                        <textarea class="form-control" id="productDescription" rows="4"
                                            name="productDescription"><%= product.productDescription %></textarea>
                                    </div>
                                    <br>



                                    <!-- <div class="form-row">
                                        <label for="">File upload (Multiple Images)</label>
                                    </div>
                                    <div class="form-row">
                                        <div class="col-md-6 mb-0">
                                            <div class="dynamic-image-inputs">
                                                <div class="input-group">
                                                    <input type="file" name="productImage" class="form-control"
                                                        required>
                                                    <div class="input-group-append">
                                                        <button class="btn btn-primary add-image-input"
                                                            type="button">Add Image</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <br>
                                    <div class="message-container"></div> -->


                                    <!-- First Image -->
                                    <img src="/car/productImages/<%= product.productImage[0] %>"
                                        id="imagePreview1" class="img-preview" style="width: 100px" />

                                    <div class="form-row">
                                        <div class="col-md-6 mb-0">
                                            <div class="input-group">
                                                <input type="file" accept="image/*" name="productImage" class="form-control"
                                                    style="display: inline-block;" id="imageInput1" required
                                                    onchange="handleFileInputChange('imageInput1', 'imagePreview1')">
                                                <input type="hidden" name="croppedImageData1" id="croppedImageData1">
                                            </div>
                                        </div>
                                    </div>

                                    <!-- Second Image -->
                                    <img src="/car/productImages/<%= product.productImage[1] %>"
                                        id="imagePreview2" class="img-preview" style="width: 100px;" />

                                    <div class="form-row">
                                        <div class="col-md-6 mb-0">
                                            <div class="input-group">
                                                <input type="file" accept="image/*" name="productImage" class="form-control"
                                                    id="imageInput2" required
                                                    onchange="handleFileInputChange('imageInput2', 'imagePreview2')">
                                                <input type="hidden" name="croppedImageData2" id="croppedImageData2">
                                            </div>
                                        </div>
                                    </div>

                                    <!-- Third Image -->
                                    <img src="/car/productImages/<%= product.productImage[2] %>"
                                        id="imagePreview3" class="img-preview" style="width: 100px;" />

                                    <div class="form-row">
                                        <div class="col-md-6 mb-0">
                                            <div class="input-group">
                                                <input type="file" accept="image/*" name="productImage" class="form-control"
                                                    id="imageInput3" required
                                                    onchange="handleFileInputChange('imageInput3', 'imagePreview3')">
                                                <input type="hidden" name="croppedImageData3" id="croppedImageData3">
                                            </div>
                                        </div>
                                    </div>



                                    <br>

                                    <!-- <div class="col-md-6 col-xl-4 grid-margin stretch-card">
                                        <div class="card">
                                            <div class="card-body">
                                                <h4 class="card-title">Existing Images</h4>
                                                <div class="owl-carousel owl-theme full-width owl-carousel-dash portfolio-carousel"
                                                    id="owl-carousel-basic">
                                                        <% product.productImage.forEach(image=> { %>
                                                            <div class="item">
                                                                <img src="/car/adminAssets/assets/images/products/<%= image %>"
                                                                    alt="">
                                                            </div>
                                                        <% }); %>
                                                </div>
                                            </div>
                                        </div>
                                    </div> -->

                                    <!-- Crop Button -->
                                    <button type="button" class="btn btn-success mt-3" id="cropButton">Crop</button>


                                    <br>
                                    <div class="input-container">
                                        <input type="hidden" name="id" value="<%= product._id %>">
                                    </div>
                                    <div class="form-row">
                                        <button type="submit" class="btn btn-primary mr-2">Submit</button>
                                        <button class="btn btn-dark" type="button"
                                            onclick="window.location.href='/admin/viewProduct'">Cancel</button>

                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>


                </div>
            </div>

            <!-- image cropping -->
            <script>
                let croppers = []; // Declare an array to store cropper instances

                function initializeCropper(imagePreview, index) {
                    croppers[index] = new Cropper(imagePreview, {
                        aspectRatio: 1,
                        viewMode: 1,
                    });
                }

                function handleFileInputChange(inputId, previewId, index) {
                    const inputFile = document.getElementById(inputId);
                    const imagePreview = document.getElementById(previewId);

                    inputFile.addEventListener("change", function () {
                        const file = this.files[0];

                        if (file) {
                            const reader = new FileReader();
                            reader.onload = function (e) {
                                // Destroy the existing cropper instance if it exists
                                if (croppers[index]) {
                                    croppers[index].destroy();
                                }

                                imagePreview.src = e.target.result;

                                // Initialize Cropper for the specific index
                                initializeCropper(imagePreview, index);
                            };
                            reader.readAsDataURL(file);
                        } else {
                            imagePreview.src = "";
                            // Destroy the existing cropper instance if it exists
                            if (croppers[index]) {
                                croppers[index].destroy();
                            }
                        }
                    });
                }

                // Call the function for each file input and preview combination
                handleFileInputChange("imageInput1", "imagePreview1", 0);
                handleFileInputChange("imageInput2", "imagePreview2", 1);
                handleFileInputChange("imageInput3", "imagePreview3", 2);

                const cropButton = document.getElementById("cropButton");
                cropButton.addEventListener("click", function () {
                    // Loop through each cropper instance
                    croppers.forEach((cropper, index) => {
                        if (cropper) {
                            const currentPreview = document.getElementById(`imagePreview${index + 1}`);
                            const currentCroppedImageData = document.getElementById(`croppedImageData${index + 1}`);

                            if (currentPreview) {
                                const croppedCanvas = cropper.getCroppedCanvas();
                                const croppedImageDataURL = croppedCanvas.toDataURL("image/jpeg");

                                console.log('Cropped Image Data:', croppedImageDataURL);
                                // Update the preview image
                                currentPreview.src = croppedImageDataURL;
                                // Set the cropped image data to the corresponding hidden input field
                                currentCroppedImageData.value = croppedImageDataURL;

                                // Destroy Cropper after cropping
                                cropper.destroy();
                                croppers[index] = null; // Reset cropper
                            } else {
                                console.error(`Preview element not found for index ${index}.`);
                            }
                        }
                    });
                });

            </script>

            <script>
                document.addEventListener("DOMContentLoaded", function () {

                    // Validate Product Name (Alphabets with optional spaces)
                    const productNameInput = document.getElementById("productName");

                    productNameInput.addEventListener("input", function () {
                        const value = productNameInput.value;

                        if (!/^[a-zA-Z ]+$/.test(value.trim())) {
                            productNameInput.setCustomValidity("Product Name can only contain alphabets and may include spaces, but should not be just whitespace.");
                        } else {
                            productNameInput.setCustomValidity("");
                        }
                    });

                    // Validate Product Brand (Alphabets with optional spaces)
                    const productBrandInput = document.getElementById("productBrand");

                    productBrandInput.addEventListener("input", function () {
                        const value = productBrandInput.value;

                        if (!/^[a-zA-Z ]+$/.test(value.trim())) {
                            productBrandInput.setCustomValidity("Product Brand can only contain alphabets and may include spaces, but should not be just whitespace.");
                        } else {
                            productBrandInput.setCustomValidity("");
                        }
                    });

                    // Validate Price (Only numbers)
                    const productPriceInput = document.getElementById("productPrice");
                    productPriceInput.addEventListener("input", function () {
                        const value = productPriceInput.value;
                        if (!/^\d+(\.\d{1,2})?$/.test(value)) {
                            productPriceInput.setCustomValidity("Price can only contain numbers, optionally with up to 2 decimal places.");
                        } else {
                            productPriceInput.setCustomValidity("");
                        }
                    });

                    // Validate productOfferPercentage (Only numbers)
                    const offerPercentageInput = document.getElementById("productOfferPercentage");
                    offerPercentageInput.addEventListener("input", function () {
                        const value = offerPercentageInput.value;
                        if (!/^\d+(\.\d{1,2})?$/.test(value)) {
                            offerPercentageInput.setCustomValidity("Offer Percentage can only contain numbers, optionally with up to 2 decimal places.");
                        } else {
                            offerPercentageInput.setCustomValidity("");
                        }
                    });
                    
                    // Validate Stock (Only numbers)
                    const productStockInput = document.getElementById("productStock");
                    productStockInput.addEventListener("input", function () {
                        const value = productStockInput.value;
                        if (!/^\d+(\.\d{1,2})?$/.test(value)) {
                            productStockInput.setCustomValidity("Stock can only contain numbers, optionally with up to 2 decimal places.");
                        } else {
                            productStockInput.setCustomValidity("");
                        }
                    });


                });

            </script>

            <%- include('./layouts/footer.ejs') %>